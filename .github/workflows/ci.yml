name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  Node:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        check:
          - name: Type check
            run: npm run type-check
          - name: Lint
            run: npm run lint
          - name: Test
            run: npm test

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "17.x"
          cache: "npm"
      - run: npm ci
      - run: npx openapi --input ./analytics/openapi.json --output ./analytics-client --name AnalyticsClient

      - name: ${{ matrix.check.name }}
        run: ${{ matrix.check.run }}
        env:
          CI: true
          NODE_OPTIONS: --openssl-legacy-provider

  Python:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        check:
          - name: pylint
            run: poetry run pylint cdm_analytics
          - name: mypy
            run: poetry run mypy cdm_analytics
          - name: Unit tests
            run: docker-compose up -d && poetry run pytest --verbose

    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup-analytics

      - name: ${{ matrix.check.name }}
        run: ${{ matrix.check.run }}
        working-directory: analytics
        env:
          CI: true

  E2E:
    name: Build and E2E test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup-analytics
      - uses: actions/setup-node@v2
        with:
          node-version: "17.x"
          cache: "npm"
      - run: npm ci

      - run: docker-compose up -d
        working-directory: analytics
      - run: npm run e2e
        env:
          CI: true
          ANALYTICS_BUILDER_CLIENT_ID: e25bc9ce-73d8-4e8c-8c0c-b0d8fcffe24f
          ANALYTICS_BUILDER_CLIENT_SECRET: "builder access token"
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
          GATSBY_ANALYTICS_URL: http://127.0.0.1:8001
          NODE_OPTIONS: --openssl-legacy-provider
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}

  Chromatic:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup-analytics
      - uses: actions/setup-node@v2
        with:
          node-version: "16.x"
          cache: "npm"

      - run: npm ci
      - run: npx openapi --input ./analytics/openapi.json --output ./analytics-client --name AnalyticsClient

      - name: Publish to Chromatic for visual verification
        uses: chromaui/action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
