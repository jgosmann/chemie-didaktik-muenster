name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  General:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        check:
          - name: Type check
            run: npm run type-check
          - name: Lint
            run: npm run lint
          - name: Test
            run: npm test
          - name: Build
            run: npm run build

    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup-analytics
      - uses: actions/setup-node@v2
        with:
          node-version: "17.x"
          cache: "npm"
      - run: npm ci
      - run: poetry run python3 -m cdm_analytics.write_spec openapi.json
        working-directory: analytics
      - run: npx openapi --input ./analytics/openapi.json --output ./analytics-client --name AnalyticsClient

      - name: ${{ matrix.check.name }}
        run: ${{ matrix.check.run }}
        env:
          CI: true
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
          NODE_OPTIONS: --openssl-legacy-provider

  Analytics:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup-analytics

      - run: docker-compose up -d
        working-directory: analytics
      - run: poetry run pytest --verbose
        working-directory: analytics
        env:
          CI: true

  Chromatic:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: ./.github/actions/setup-analytics
      - uses: actions/setup-node@v2
        with:
          node-version: "16.x"
          cache: "npm"

      - run: npm ci
      - run: poetry run python3 -m cdm_analytics.write_spec openapi.json
        working-directory: analytics
      - run: npx openapi --input ./analytics/openapi.json --output ./analytics-client --name AnalyticsClient

      - name: Publish to Chromatic for visual verification
        uses: chromaui/action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
